plugins {
    id("io.micronaut.application") version "4.3.8"
    id("com.microsoft.azure.azurefunctions") version "1.15.0"
    id("io.micronaut.aot") version "4.3.8"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("com.microsoft.azure.functions:azure-functions-java-library")
    implementation("io.micronaut.azure:micronaut-azure-function")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    compileOnly("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    testImplementation("io.micronaut:micronaut-http-client")
}


application {
    mainClass = "com.example.Application"
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}


tasks {
}
graalvmNative.toolchainDetection = false
micronaut {
    runtime("azure_function")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = true
    }
}


azurefunctions {
    resourceGroup = "java-functions-group"
    appName = "demo"
    pricingTier = "Consumption"
    region = "westus"
    runtime {
        os = "linux"
        javaVersion = "Java 17"
    }
    localDebug = "transport=dt_socket,server=y,suspend=n,address=5005"
}


